<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3633_app_slave.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3633_app_slave.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Thu Jun 10 20:27:30 2021
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[fe]">__rt_div0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[fe]">__rt_div0</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[10]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[f]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[50]">MGC_AidlBdisTimeout</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[4e]">MGC_BAase0BrstTimeout</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[4c]">MGC_BSrpFailed</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[48]">MGC_DrcAcceptDevice</a> from mu_drc.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[35]">MGC_DrcBsr</a> from mu_drc.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[51]">MGC_DrcCompleteResume</a> from mu_drc.o(.text) referenced 2 times from mu_drc.o(.text)
 <LI><a href="#[3c]">MGC_DrcResetPort</a> from mu_drc.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[39]">MGC_DrcSetHostPower</a> from mu_drc.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[58]">MGC_DriverTimerExpired</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[5b]">MGC_EhsetGetDescriptorIn</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[5a]">MGC_EhsetGetDescriptorSetup</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[59]">MGC_EhsetResume</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[3d]">MGC_FdrcBindEndpoint</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[42]">MGC_FdrcDefaultEndResponse</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[38]">MGC_FdrcDestroy</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[49]">MGC_FdrcDmaChannelStatusChanged</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[4a]">MGC_FdrcDynamicFifoLocation</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[40]">MGC_FdrcFlushEndpoint</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[41]">MGC_FdrcHaltEndpoint</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[34]">MGC_FdrcIsr</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[46]">MGC_FdrcLoadFifo</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[3b]">MGC_FdrcProgramBusState</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[3a]">MGC_FdrcReadBusState</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[43]">MGC_FdrcServiceDefaultEnd</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[44]">MGC_FdrcServiceReceiveReady</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[45]">MGC_FdrcServiceTransmitAvail</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[36]">MGC_FdrcStart</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[3e]">MGC_FdrcStartRx</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[3f]">MGC_FdrcStartTx</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[37]">MGC_FdrcStop</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[47]">MGC_FdrcUnloadFifo</a> from mu_fdr.o(.text) referenced from mu_cntlr.o(.text)
 <LI><a href="#[56]">MGC_HostEnumerator</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[55]">MGC_HostGetConfig</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[54]">MGC_HostGetFullDescriptor</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[53]">MGC_HostGetShortDescriptor</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[4b]">MGC_HostResetComplete</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[4f]">MGC_HostResetStart</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[57]">MGC_HostSetDeviceAddress</a> from mu_hst.o(.text) referenced from mu_hst.o(.text)
 <LI><a href="#[f4]">MGC_McpDeviceConfigSelected</a> from mu_msdfn.o(.text) referenced from mu_msdfn.o(.data)
 <LI><a href="#[f3]">MGC_McpDeviceRequest</a> from mu_msdfn.o(.text) referenced from mu_msdfn.o(.data)
 <LI><a href="#[f5]">MGC_McpNewUsbState</a> from mu_msdfn.o(.text) referenced from mu_msdfn.o(.data)
 <LI><a href="#[f6]">MGC_MsdNewOtgState</a> from tst_msd.o(.text) referenced from tst_msd.o(.data)
 <LI><a href="#[f7]">MGC_MsdOtgError</a> from tst_msd.o(.text) referenced from tst_msd.o(.data)
 <LI><a href="#[5d]">MGC_MsdRdTransferComplete</a> from tst_msd.o(.text) referenced from tst_msd.o(.text)
 <LI><a href="#[5e]">MGC_MsdWrTransferComplete</a> from tst_msd.o(.text) referenced from tst_msd.o(.text)
 <LI><a href="#[63]">MGC_NoneArmTimer</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[64]">MGC_NoneCancelTimer</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[68]">MGC_NoneControllerIsr</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[61]">MGC_NoneDequeueBackgroundItem</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[62]">MGC_NoneFlushBackgroundQueue</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[65]">MGC_NoneLock</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[60]">MGC_NoneQueueBackgroundItem</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[66]">MGC_NoneUnlock</a> from plat_uds.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[52]">MGC_RemoveSuspend</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[f2]">MGC_SetHnpEnableIrpComplete</a> from mu_drc.o(.text) referenced from mu_drc.o(.data)
 <LI><a href="#[f1]">MGC_SetHnpSupportIrpComplete</a> from mu_drc.o(.text) referenced from mu_drc.o(.data)
 <LI><a href="#[4d]">MGC_WaitSessReqTimeout</a> from mu_drc.o(.text) referenced from mu_drc.o(.text)
 <LI><a href="#[fa]">MUSB_BoardGetTime</a> from board.o(.text) referenced from plat_uds.o(.data)
 <LI><a href="#[f9]">MUSB_BoardMessageNumber</a> from board.o(.text) referenced from plat_uds.o(.data)
 <LI><a href="#[f8]">MUSB_BoardMessageString</a> from board.o(.text) referenced from plat_uds.o(.data)
 <LI><a href="#[67]">MUSB_BoardPrintDiag</a> from board.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[5f]">MUSB_BoardSystemToBusAddress</a> from board.o(.text) referenced from plat_uds.o(.text)
 <LI><a href="#[c]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[b]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5c]">USBD_KeyboardTxDataComplete</a> from mu_msdfn.o(.text) referenced from mu_msdfn.o(.text)
 <LI><a href="#[a]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6c]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[6b]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[6a]">_snputc</a> from _snputc.o(.text) referenced from __2snprintf.o(.text)
 <LI><a href="#[69]">_sputc</a> from _sputc.o(.text) referenced 2 times from vsprintf.o(.text)
 <LI><a href="#[85]">adv_en</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[87]">app_batt_add_bas</a> from app_batt.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[8b]">app_batt_msg_dflt_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[86]">app_dis_add_dis</a> from app_dis.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[89]">app_fcc0_add_fcc0s</a> from app_fcc0.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[b5]">app_fcc0_msg_dflt_handler</a> from app_fcc0.o(.text) referenced from app_fcc0.o(.constdata)
 <LI><a href="#[88]">app_fee0_add_fee0s</a> from app_fee0.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[ae]">app_fee0_msg_dflt_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[bb]">app_ffc1_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[bd]">app_ffc2_writer_req_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[a7]">app_gattc_event_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a8]">app_gattc_event_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a9]">app_gattc_mtu_changed_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[ad]">app_led_mode_process_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[8a]">app_oad_add_oads</a> from app_oads.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[b9]">app_oads_msg_dflt_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[90]">app_sec_msg_dflt_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[ab]">app_send_security_req_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[ac]">app_user_change_mtu_size_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[30]">appm_init</a> from app.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[96]">appm_msg_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[6e]">at_mode</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[8d]">bass_batt_level_ntf_cfg_ind_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[d5]">bass_batt_level_upd_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[d3]">bass_cleanup</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[d2]">bass_create</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[d1]">bass_destroy</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[d4]">bass_enable_req_handler</a> from bass_task.o(.text) referenced from bass_task.o(.constdata)
 <LI><a href="#[8c]">bass_enable_rsp_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[d0]">bass_init</a> from bass.o(.text) referenced from bass.o(.constdata)
 <LI><a href="#[8e]">batt_level_upd_handler</a> from app_batt.o(.text) referenced from app_batt.o(.constdata)
 <LI><a href="#[84]">baud_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[82]">ble_parm_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[7b]">ble_status_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[79]">bufs_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[1a]">cli_main</a> from cli_krhino.o(.text) referenced from cli_krhino.o(.text)
 <LI><a href="#[83]">connected_info_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[6f]">data_mode</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[73]">dev_name_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[81]">disconn_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[c2]">diss_cleanup</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[c1]">diss_create</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[c0]">diss_destroy</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[bf]">diss_init</a> from diss.o(.text) referenced from diss.o(.constdata)
 <LI><a href="#[c3]">diss_set_value_req_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[c5]">diss_value_cfm_handler</a> from diss_task.o(.text) referenced from diss_task.o(.constdata)
 <LI><a href="#[8f]">diss_value_req_ind_handler</a> from app_dis.o(.text) referenced from app_dis.o(.constdata)
 <LI><a href="#[b6]">fcc0s_fcc2_val_ntf_cfg_ind_handler</a> from app_fcc0.o(.text) referenced from app_fcc0.o(.constdata)
 <LI><a href="#[b8]">fcc1_writer_cmd_handler</a> from app_fcc0.o(.text) referenced from app_fcc0.o(.constdata)
 <LI><a href="#[b7]">fcc2_val_upd_rsp_handler</a> from app_fcc0.o(.text) referenced from app_fcc0.o(.constdata)
 <LI><a href="#[c9]">fee0s_cleanup</a> from fee0s.o(.text) referenced from fee0s.o(.constdata)
 <LI><a href="#[c8]">fee0s_create</a> from fee0s.o(.text) referenced from fee0s.o(.constdata)
 <LI><a href="#[c7]">fee0s_destroy</a> from fee0s.o(.text) referenced from fee0s.o(.constdata)
 <LI><a href="#[af]">fee0s_fee4_val_ntf_cfg_ind_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[ca]">fee0s_fee4_val_upd_req_handler</a> from fee0s_task.o(.text) referenced from fee0s_task.o(.constdata)
 <LI><a href="#[b0]">fee0s_fee5_val_ind_cfg_ind_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[cb]">fee0s_fee5_val_upd_req_handler</a> from fee0s_task.o(.text) referenced from fee0s_task.o(.constdata)
 <LI><a href="#[c6]">fee0s_init</a> from fee0s.o(.text) referenced from fee0s.o(.constdata)
 <LI><a href="#[b3]">fee2_writer_cmd_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[b4]">fee3_writer_req_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[b1]">fee4_val_upd_rsp_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[b2]">fee5_val_upd_rsp_handler</a> from app_fee0.o(.text) referenced from app_fee0.o(.constdata)
 <LI><a href="#[92]">gapc_bond_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[91]">gapc_bond_req_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[a4]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a0]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a5]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[94]">gapc_encrypt_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[93]">gapc_encrypt_req_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[9e]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a3]">gapc_le_pkt_size_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a1]">gapc_param_update_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a2]">gapc_param_updated_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[95]">gapc_security_ind_handler</a> from app_sec.o(.text) referenced from app_sec.o(.constdata)
 <LI><a href="#[9f]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[98]">gapm_activity_created_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[99]">gapm_activity_stopped_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9a]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9d]">gapm_ext_adv_report_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9b]">gapm_gen_rand_nb_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[97]">gapm_profile_added_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9c]">gapm_scan_request_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[cc]">gattc_att_info_req_ind_handler</a> from fee0s_task.o(.text) referenced 2 times from fee0s_task.o(.constdata)
 <LI><a href="#[aa]">gattc_cmp_evt_handler</a> from app_task.o(.text) referenced 5 times from app_task.o(.constdata)
 <LI><a href="#[e4]">gattc_event_ind_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[e5]">gattc_event_req_ind_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[e3]">gattc_read_ind_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[c4]">gattc_read_req_ind_handler</a> from diss_task.o(.text) referenced 4 times from diss_task.o(.constdata)
 <LI><a href="#[a6]">gattc_sdp_svc_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[cd]">gattc_write_req_ind_handler</a> from fee0s_task.o(.text) referenced 3 times from fee0s_task.o(.constdata)
 <LI><a href="#[77]">gpio_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[6d]">help_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[78]">led_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[7c]">mac_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[11]">main</a> from main.o(.text) referenced from __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
 <LI><a href="#[7a]">name_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[23]">nvds_del</a> from nvds.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1f]">nvds_erase</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[21]">nvds_get</a> from nvds.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[22]">nvds_put</a> from nvds.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1d]">nvds_read</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[1e]">nvds_write</a> from nvds.o(.text) referenced from nvds.o(.text)
 <LI><a href="#[ea]">oads_cleanup</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[e9]">oads_create</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[e8]">oads_destroy</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[eb]">oads_enable_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[ba]">oads_enable_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[ec]">oads_ffc1_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[bc]">oads_ffc1_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[ed]">oads_ffc2_upd_req_handler</a> from oads_task.o(.text) referenced from oads_task.o(.constdata)
 <LI><a href="#[be]">oads_ffc2_upd_rsp_handler</a> from app_oads.o(.text) referenced from app_oads.o(.constdata)
 <LI><a href="#[e7]">oads_init</a> from oads.o(.text) referenced from oads.o(.constdata)
 <LI><a href="#[7f]">pincode_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[2f]">platform_reset</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[7d]">power_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[2d]">prf_add_profile</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2c]">prf_cleanup</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2b]">prf_create</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[28]">prf_get_id_from_task</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[29]">prf_get_task_from_id</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2a]">prf_init</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[74]">reboot_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[80]">remove_bond_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[17]">rf_force_agc_enable</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[31]">rf_init</a> from rf_xvr.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[16]">rf_reset</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[12]">rf_rpl_reg_rd</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[13]">rf_rpl_reg_wr</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[18]">rf_rssi_convert</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[15]">rf_sleep</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[19]">rf_txpwr_cs_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[14]">rf_txpwr_dbm_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[7e]">rssi_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[33]">rwip_crypt_evt_handler</a> from rwip_driver.o(.text) referenced from rwip_driver.o(.text)
 <LI><a href="#[32]">rwip_driver_init</a> from rwip_driver.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2e]">rwip_reset</a> from peripheral_stack_symbol.txt(ABSOLUTE) referenced from arch_main.o(.text)
 <LI><a href="#[dd]">sdp_cleanup</a> from sdp_service.o(.text) referenced from sdp_service.o(.constdata)
 <LI><a href="#[dc]">sdp_create</a> from sdp_service.o(.text) referenced from sdp_service.o(.constdata)
 <LI><a href="#[de]">sdp_default_msg_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[db]">sdp_destroy</a> from sdp_service.o(.text) referenced from sdp_service.o(.constdata)
 <LI><a href="#[df]">sdp_enable_req_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[da]">sdp_init</a> from sdp_service.o(.text) referenced from sdp_service.o(.constdata)
 <LI><a href="#[e0]">sdp_read_info_req_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[e2]">sdp_write_ntf_cfg_req_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[e1]">sdp_write_value_info_req_handler</a> from sdp_service_task.o(.text) referenced from sdp_service_task.o(.constdata)
 <LI><a href="#[76]">sleep_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[71]">sn_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[fb]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[e]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1b]">timer0_0_isr_handler</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[1c]">timer0_1_isr_handler</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[24]">uart_flow_off</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[25]">uart_flow_on</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[20]">uart_printf_null</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[26]">uart_read</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[27]">uart_write</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[72]">uuid_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[70]">version_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
 <LI><a href="#[75]">wdt_cmd</a> from cli_api.o(.text) referenced from cli_api.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[222]"></a>uart_stack_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[337]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[338]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[339]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[33a]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[33b]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[232]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[181]"></a>ke_event_callback_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
</UL>

<P><STRONG><a name="[107]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee3_writer_req_handler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1ISR
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
</UL>

<P><STRONG><a name="[175]"></a>ke_event_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_evt_handler
</UL>

<P><STRONG><a name="[272]"></a>ke_check_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_enough_mem_add_service
</UL>

<P><STRONG><a name="[17f]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_service_init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AfsMemRealloc
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_OpenPipe
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInsertItem
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ListInsertItem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayInit
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayAppend
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionRegisterClient
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EnumerateDevice
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[180]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardDestroyController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardInitTimers
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AfsMemRealloc
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ClosePipe
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_OpenPipe
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FreeScheduleContents
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayClear
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionDestroy
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayAppend
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionRegisterClient
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcDestroy
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_destroy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_cleanup
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_destroy
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_destroy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[1de]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc2_send_ntf
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_add_profiles
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee5_send_ind
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_all_service
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_bond_cmd
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_userDesc_by_handle_req
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_ntf_ind_cfg_by_handle_req
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_handle_req
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_uuid_req
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_ntf_cfg_req
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_connencting
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_connecting
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_scaning
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scaning
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_scaning
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_updata_adv_data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_advertising
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc0_add_fcc0s
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_gatt_mtu_change
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_le_data_length_update_req
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_req_ind_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_rsp_send
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_service
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_service_ntf_cfg_req
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_indicate_fee5_val
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_notify_fee4_val
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_unregister_atthdl2gatt
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
</UL>

<P><STRONG><a name="[1df]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc2_send_ntf
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_add_profiles
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee5_send_ind
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_all_service
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_bond_cmd
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_userDesc_by_handle_req
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_ntf_ind_cfg_by_handle_req
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_handle_req
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_uuid_req
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_ntf_cfg_req
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_connencting
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_connecting
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_scaning
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scaning
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_scaning
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_updata_adv_data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_advertising
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc0_add_fcc0s
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_add_dis
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_add_bas
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_gatt_mtu_change
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_le_data_length_update_req
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_req_ind_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_rsp_send
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_service
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_service_ntf_cfg_req
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_indicate_fee5_val
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_notify_fee4_val
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_unregister_atthdl2gatt
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
</UL>

<P><STRONG><a name="[1d5]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[1d6]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_cleanup
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_create
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_upd_req_handler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_upd_req_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[1e3]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee2_writer_cmd_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gattc_event_req_ind_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gattc_event_ind_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_userDesc_by_handle_req
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_ntf_ind_cfg_by_handle_req
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_handle_req
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_uuid_req
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_ntf_cfg_req
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_gatt_mtu_change
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_le_data_length_update_req
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_remove_bond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_state
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_search
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_device_info_get
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_channel_search
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_search
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_req_ind_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_service_ntf_cfg_req
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_upd_req_handler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_upd_req_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[255]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[205]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_mode_process_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gpio_led
</UL>

<P><STRONG><a name="[2fb]"></a>lld_con_rssi_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_rssi
</UL>

<P><STRONG><a name="[2fc]"></a>llm_rx_path_comp_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_rssi
</UL>

<P><STRONG><a name="[23f]"></a>sch_alarm_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
</UL>

<P><STRONG><a name="[240]"></a>sch_arb_event_start_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
</UL>

<P><STRONG><a name="[23e]"></a>sch_arb_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[23a]"></a>sch_prog_fifo_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[231]"></a>aes_result_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_evt_handler
</UL>

<P><STRONG><a name="[25a]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[260]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[25b]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_destroy
</UL>

<P><STRONG><a name="[25f]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[10a]"></a>rwble_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[234]"></a>rwble_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[242]"></a>rwble_sleep_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[227]"></a>rwip_eif_api_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[224]"></a>rwip_param_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[226]"></a>rwip_ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[228]"></a>rwip_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[2e]"></a>rwip_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[22a]"></a>rwip_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[233]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[235]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
</UL>

<P><STRONG><a name="[23c]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[26d]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[203]"></a>gapc_get_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[24c]"></a>attm_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info
</UL>

<P><STRONG><a name="[258]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[278]"></a>attm_svc_create_db128</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[262]"></a>attm_att_set_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
</UL>

<P><STRONG><a name="[112]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_set
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1DbgInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ComputeBandwidth
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_PipeTransmitReady
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_PipePacketReceived
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
</UL>

<P><STRONG><a name="[2ca]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_rssi
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ComputeBandwidth
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>

<P><STRONG><a name="[202]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[155]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc2_send_ntf
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee5_send_ind
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_uuid_req
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_connecting
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_connect_dev_addr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_connect_dev_addr
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_updata_adv_data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_add_fee0s
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_version_time
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_uuid
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sn
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_product_name
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fw_version
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_pincode
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_name
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_mac
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_version_time
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uuid
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sn
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_product_name
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fw_version
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_pincode
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_parm
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_name
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_mac
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_uart_ringbuf_data
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_complete
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_uart_ringbuf_data
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_keyboad_data
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneDequeueBackgroundItem
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneQueueBackgroundItem
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AfsMemRealloc
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EhsetGetDescriptorSetup
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostGetConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostGetFullDescriptor
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostGetShortDescriptor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostSetDeviceAddress
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSetInterface
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_PipePacketReceived
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayAppend
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_req_ind_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_ind_handler
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_service
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_indicate_fee5_val
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_notify_fee4_val
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_evt_handler
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
</UL>

<P><STRONG><a name="[281]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[15d]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_ringbuf_clean
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_name
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_ringbuf_clean
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_uart1_buffer
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[16b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gapm_adv_check_data_sanity
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_service_init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_product_name
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardInitController
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ClosePipe
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_OpenPipe
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EnumerateDevice
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AllocateDynamicFifo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NewController
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
</UL>

<P><STRONG><a name="[206]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_sdp_fee0_srv
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_search
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_search
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get_from_uuid
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>

<P><STRONG><a name="[1c2]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardCancelTimer (via BLX)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[1c3]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardCancelTimer (via BLX)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[1c4]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardCancelTimer (via BLX)
</UL>

<P><STRONG><a name="[1c5]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data (via BLX)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector (via BLX)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardCancelTimer (via BLX)
</UL>

<P><STRONG><a name="[158]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, peripheral_stack_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via BLX)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via BLX)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via BLX)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler (via BLX)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next (via BLX)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next (via BLX)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gapm_adv_check_data_sanity (via BLX)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next (via BLX)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us (via BLX)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch (via BLX)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup (via BLX)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms (via BLX)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostFindDriver (via BLX)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_Ehset (via BLX)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator (via BLX)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_SkipEntry (via BLX)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup (via BLX)
</UL>

<P><STRONG><a name="[fc]"></a>vectors</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))

<P><STRONG><a name="[fb]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[fe]"></a>__rt_div0</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL>

<P><STRONG><a name="[ff]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[100]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[102]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[fd]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset
</UL>

<P><STRONG><a name="[113]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[115]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[116]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size 0 bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[117]"></a>_printf_n</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (via Veneer)
</UL>

<P><STRONG><a name="[30d]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (via BLX)
</UL>

<P><STRONG><a name="[119]"></a>_printf_p</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr (via Veneer)
</UL>

<P><STRONG><a name="[11b]"></a>_printf_f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[11d]"></a>_printf_e</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[11e]"></a>_printf_g</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[11f]"></a>_printf_a</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[121]"></a>_printf_i</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[123]"></a>_printf_d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[124]"></a>_printf_u</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[125]"></a>_printf_o</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct (via Veneer)
</UL>

<P><STRONG><a name="[127]"></a>_printf_x</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex (via Veneer)
</UL>

<P><STRONG><a name="[129]"></a>_printf_lli</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[12b]"></a>_printf_lld</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[12c]"></a>_printf_llu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[12d]"></a>_printf_llo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct (via Veneer)
</UL>

<P><STRONG><a name="[12f]"></a>_printf_llx</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex (via Veneer)
</UL>

<P><STRONG><a name="[131]"></a>_printf_c</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char (via Veneer)
</UL>

<P><STRONG><a name="[133]"></a>_printf_s</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string (via Veneer)
</UL>

<P><STRONG><a name="[135]"></a>_printf_lc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar (via Veneer)
</UL>

<P><STRONG><a name="[137]"></a>_printf_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring (via Veneer)
</UL>

<P><STRONG><a name="[143]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via BLX)
</UL>

<P><STRONG><a name="[139]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[13b]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
</UL>

<P><STRONG><a name="[13d]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (via BLX)
</UL>

<P><STRONG><a name="[13e]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (via BLX)
</UL>

<P><STRONG><a name="[147]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via BLX)
</UL>

<P><STRONG><a name="[114]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[140]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[142]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via BLX)
</UL>

<P><STRONG><a name="[144]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[32c]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BLX)
</UL>

<P><STRONG><a name="[146]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via BLX)
</UL>

<P><STRONG><a name="[148]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via BLX)
</UL>

<P><STRONG><a name="[11]"></a>main</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1DbgInit
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[14e]"></a>feed_watchdog</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bk3633_initial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
</UL>

<P><STRONG><a name="[14a]"></a>SysInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bk3633_initial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_watchdog
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[154]"></a>xtal_cal_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[14f]"></a>pll_clk_calibration</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[151]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[152]"></a>kmod_calibration</STRONG> (Thumb, 350 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
</UL>

<P><STRONG><a name="[153]"></a>xvr_reg_initial</STRONG> (Thumb, 392 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_clk_calibration
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtal_cal_set
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[156]"></a>rf_debug_gpio_init</STRONG> (Thumb, 580 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[31]"></a>rf_init</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_debug_gpio_init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[2fa]"></a>rf_power_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_power
</UL>

<P><STRONG><a name="[14b]"></a>icu_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22e]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[157]"></a>cpu_wakeup</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[230]"></a>cpu_idle_sleep</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[159]"></a>mcu_clk_switch</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[150]"></a>Delay_ms</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_ip_deep_sleep_test
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_clk_calibration
</UL>

<P><STRONG><a name="[15a]"></a>rw_ip_deep_sleep_test</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[15b]"></a>Delay_us</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
</UL>

<P><STRONG><a name="[14c]"></a>Uart1DbgInit</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart1_initial .o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_baudrate
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[160]"></a>uart1_send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart1_initial .o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gattc_event_req_ind_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_putstr
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dbg1Printf
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_keyboad_data
</UL>

<P><STRONG><a name="[15c]"></a>clear_uart1_buffer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart1_initial .o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[15e]"></a>Dbg1Printf</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart1_initial .o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[162]"></a>gpio_config</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gpio_value
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[161]"></a>gpio_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[2f4]"></a>gpio_get_input</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_task
</UL>

<P><STRONG><a name="[164]"></a>gpio_set</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_mode_process_handler
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gpio_value
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[163]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>

<P><STRONG><a name="[165]"></a>cli_putstr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
</UL>

<P><STRONG><a name="[167]"></a>csp_printf</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_at_rsp_ch
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_at_cmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_device_info_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_en
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connected_info_cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_bond_cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pincode_cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rssi_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_status_cmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bufs_cmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_cmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_cmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_cmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sn_cmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_mode
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;help_cmd
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_register_commands
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_complete
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
</UL>

<P><STRONG><a name="[183]"></a>aos_cli_get_tag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_device_info_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_en
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connected_info_cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_bond_cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pincode_cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rssi_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_status_cmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bufs_cmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_cmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_cmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_cmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sn_cmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_mode
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;help_cmd
</UL>

<P><STRONG><a name="[170]"></a>cli_getchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_uart_ringbuf_data
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input
</UL>

<P><STRONG><a name="[17c]"></a>aos_cli_register_command</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_register_commands
</UL>

<P><STRONG><a name="[179]"></a>aos_cli_unregister_command</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, cli_krhino.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_unregister_commands
</UL>

<P><STRONG><a name="[17b]"></a>aos_cli_register_commands</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_register_command
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
</UL>

<P><STRONG><a name="[17d]"></a>aos_cli_unregister_commands</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cli_krhino.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_unregister_command
</UL>

<P><STRONG><a name="[17e]"></a>aos_cli_init</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_register_commands
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1b4]"></a>intc_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[101]"></a>intc_fiq</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_isr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[25]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[221]"></a>uart_finish_transfers</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[26]"></a>uart_read</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>uart_write</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>uart_printf_null</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_msg_dflt_handler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fcc1_writer_cmd_handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc0_msg_dflt_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fcc2_val_upd_rsp_handler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fcc0s_fcc2_val_ntf_cfg_ind_handler
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_add_profiles
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee3_writer_req_handler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_msg_dflt_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee5_val_upd_rsp_handler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee4_val_upd_rsp_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_ind_cfg_ind_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_ntf_cfg_ind_handler
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_all_server_ntf_ind
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_sdp_fee0_srv
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_mode_process_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_request_ind_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gattc_mtu_changed_ind_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gattc_event_ind_handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_ind_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_created_ind_handler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_all_service
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_ind_handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_msg_dflt_handler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_rsp_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_level_upd_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_ntf_cfg_ind_handler
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_userDesc_by_handle_req
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_ntf_ind_cfg_by_handle_req
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_handle_req
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_uuid_req
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_ntf_cfg_req
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_connencting
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_connecting
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_init
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_data_decode
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scaning
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_scaning
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_updata_adv_data
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oad_add_oads
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_gatt_mtu_change
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_deinit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_2_isr_handler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_1_isr_handler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_0_isr_handler
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_identify
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_isr
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_parm
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_baudrate
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_mac
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_search
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_en
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_at_cmd
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_uart_ringbuf_data
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_sw_init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RxDataCallback
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StartRx
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_usb_device
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_OpenPipe
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInsertItem
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ListInsertItem
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayInit
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionRegisterClient
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EnumerateDevice
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_SuspendBus
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_req_handler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_req_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_default_msg_handler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_ntf_cfg_req_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_value_info_req_handler
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_read_info_req_handler
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_prf_register_all_atthdl2gatt
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_service
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_service_ntf_cfg_req
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_cleanup
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_destroy
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_upd_req_handler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_upd_req_handler
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stack_usage
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc2_upd_rsp_handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_ffc1_upd_rsp_handler
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_writer_req_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>store_uart_ringbuf_data</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee3_writer_req_handler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1ISR
</UL>

<P><STRONG><a name="[171]"></a>read_uart_ringbuf_data</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_getchar
</UL>

<P><STRONG><a name="[1b5]"></a>uart_ringbuf_clean</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[173]"></a>uart1_ringbuf_clean</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input
</UL>

<P><STRONG><a name="[1c0]"></a>set_flash_clk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[1b6]"></a>flash_identify</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1b8]"></a>get_flash_ID</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>

<P><STRONG><a name="[1bc]"></a>flash_read_sr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
</UL>

<P><STRONG><a name="[1b7]"></a>flash_write_sr</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
</UL>

<P><STRONG><a name="[1b9]"></a>flash_wp_256k</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[1ba]"></a>flash_wp_ALL</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[1bb]"></a>flash_advance_init</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_sr
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_sr
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[1be]"></a>clr_flash_qwfr</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
</UL>

<P><STRONG><a name="[1bd]"></a>flash_set_dual_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_flash_qwfr
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
</UL>

<P><STRONG><a name="[1bf]"></a>flash_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_dual_mode
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_advance_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_flash_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1c1]"></a>flash_erase_sector</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
</UL>

<P><STRONG><a name="[1c6]"></a>flash_read_data</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_user_info
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[1c7]"></a>flash_write_data</STRONG> (Thumb, 382 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_ALL
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wp_256k
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[1c8]"></a>flash_read</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[1c9]"></a>flash_write</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_data
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_previous_sector
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udi_exchange_fdata_to_adjoining_next_sector
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info_to_flash
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RxDataCallback
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_write
</UL>

<P><STRONG><a name="[1ca]"></a>udi_exchange_fdata_to_adjoining_next_sector</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[1cb]"></a>udi_exchange_fdata_to_adjoining_previous_sector</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[1cc]"></a>flash_erase</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_flash_ID
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info_to_flash
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_user_info
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_erase
</UL>

<P><STRONG><a name="[1cd]"></a>timer0_set</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_0_isr_handler
</UL>

<P><STRONG><a name="[1b]"></a>timer0_0_isr_handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>timer0_1_isr_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.text)
</UL>
<P><STRONG><a name="[1ce]"></a>timer0_2_isr_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1cf]"></a>timer0_init_test</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init
</UL>

<P><STRONG><a name="[1d0]"></a>timer0_deinit</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[10f]"></a>timer0_isr</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[2f9]"></a>wdt_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wdt_state
</UL>

<P><STRONG><a name="[27c]"></a>wdt_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_reset
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wdt_time
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wdt_state
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
</UL>

<P><STRONG><a name="[2ec]"></a>wdt_feed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wdt_feed
</UL>

<P><STRONG><a name="[1d1]"></a>adc_init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
</UL>

<P><STRONG><a name="[1d2]"></a>adc_deinit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[10c]"></a>adc_isr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[1d3]"></a>adc_get_value</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_adc
</UL>

<P><STRONG><a name="[1d4]"></a>calib_adc</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_value
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[30]"></a>appm_init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_service_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_init
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee0_init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc0_init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_name
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1e0]"></a>appm_add_svc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1ac]"></a>appm_disconnect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_remove_bond
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
</UL>

<P><STRONG><a name="[1e1]"></a>appm_update_param</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[1e2]"></a>appc_le_data_length_update_req</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_user_change_mtu_size_handler
</UL>

<P><STRONG><a name="[1e4]"></a>appc_gatt_mtu_change</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_user_change_mtu_size_handler
</UL>

<P><STRONG><a name="[1e5]"></a>appm_delete_advertising</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_adv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[1e7]"></a>appm_adv_fsm_next</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, app_adv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_adv_data
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
</UL>

<P><STRONG><a name="[1e8]"></a>app_gapm_adv_check_data_sanity</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, app_adv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_updata_adv_data
</UL>

<P><STRONG><a name="[1e9]"></a>appm_updata_adv_data</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, app_adv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gapm_adv_check_data_sanity
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1b3]"></a>appm_update_adv_state</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_adv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_en
</UL>

<P><STRONG><a name="[1eb]"></a>appm_delete_scaning</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_scan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[1ec]"></a>appm_scan_fsm_next</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, app_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scaning
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_scaning
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_scan_state
</UL>

<P><STRONG><a name="[1ee]"></a>appm_update_scan_state</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_scan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
</UL>

<P><STRONG><a name="[1ef]"></a>appm_adv_data_decode</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, app_scan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1f0]"></a>appm_set_connect_dev_addr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1f1]"></a>appm_get_connect_dev_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1f2]"></a>appm_start_connecting</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, app_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
</UL>

<P><STRONG><a name="[1f3]"></a>appm_stop_connencting</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1f4]"></a>appm_init_fsm_next</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, app_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_connecting
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_init_state
</UL>

<P><STRONG><a name="[1f6]"></a>appm_update_init_state</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
</UL>

<P><STRONG><a name="[1f7]"></a>appc_write_service_data_req</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, app_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_at_cmd
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_ble_data
</UL>

<P><STRONG><a name="[1f8]"></a>appc_write_service_ntf_cfg_req</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1f9]"></a>appm_read_service_data_by_uuid_req</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1fa]"></a>appm_read_service_data_by_handle_req</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1fb]"></a>appm_read_service_ntf_ind_cfg_by_handle_req</STRONG> (Thumb, 614 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1fc]"></a>appm_read_service_userDesc_by_handle_req</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, app_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[1d9]"></a>app_batt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[87]"></a>app_batt_add_bas</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1fd]"></a>app_batt_enable_prf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[1fe]"></a>app_batt_send_lvl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_batt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[1d8]"></a>app_dis_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[86]"></a>app_dis_add_dis</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1d7]"></a>app_sec_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[208]"></a>app_sec_get_bond_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1ff]"></a>app_sec_remove_bond</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_remove_bond
</UL>

<P><STRONG><a name="[200]"></a>app_sec_send_security_req</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_security_req_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[201]"></a>app_sec_send_bond_cmd</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_ind_handler
</UL>

<P><STRONG><a name="[207]"></a>gapm_operation_key2str</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[20c]"></a>gapc_operation_key2str</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[1da]"></a>app_fee0_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[88]"></a>app_fee0_add_fee0s</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[210]"></a>app_fee4_send_ntf</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_ble_data
</UL>

<P><STRONG><a name="[211]"></a>app_fee5_send_ind</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_at_cmd
</UL>

<P><STRONG><a name="[20e]"></a>app_add_sdp_fee0_srv</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_add_profiles
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_ind_handler
</UL>

<P><STRONG><a name="[1db]"></a>app_fcc0_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[89]"></a>app_fcc0_add_fcc0s</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[214]"></a>app_fcc2_send_ntf</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fcc1_writer_cmd_handler
</UL>

<P><STRONG><a name="[1dc]"></a>app_oads_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[8a]"></a>app_oad_add_oads</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[215]"></a>app_oads_enable_prf</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[217]"></a>app_ffc1_ntf_req</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[218]"></a>app_ffc2_ntf_req</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_oads.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[219]"></a>nvds_init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_read
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[21]"></a>nvds_get</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>nvds_del</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_remove_bond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[21c]"></a>nvds_lock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, nvds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>

<P><STRONG><a name="[22]"></a>nvds_put</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_remove_bond
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[21f]"></a>get_stack_usage</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[220]"></a>bdaddr_env_init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_mac
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[2f]"></a>platform_reset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RxDataCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[14d]"></a>rw_main</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dev_mode
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_clk_switch
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xvr_reg_initial
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_api_init
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_param_init
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_ke_mem_init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stack_register
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_pro
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WFI (via BLX)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22d]"></a>rwip_sleep</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_enter
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[32]"></a>rwip_driver_init</STRONG> (Thumb, 380 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>rwip_isr</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_sw_isr
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_fifo_isr
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_fiq
</UL>

<P><STRONG><a name="[26e]"></a>prf_pack_char_pres_fmt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[243]"></a>prf_read_char_send</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_read_info_req_handler
</UL>

<P><STRONG><a name="[245]"></a>prf_register_atthdl2gatt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_prf_register_all_atthdl2gatt
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_init
</UL>

<P><STRONG><a name="[246]"></a>prf_unregister_atthdl2gatt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>

<P><STRONG><a name="[247]"></a>prf_disc_svc_send</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>

<P><STRONG><a name="[248]"></a>prf_disc_svc_send_uuid128</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>

<P><STRONG><a name="[249]"></a>prf_gatt_write</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_value_info_req_handler
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write_ntf_ind
</UL>

<P><STRONG><a name="[24a]"></a>prf_gatt_write_ntf_ind</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, prf_utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_ntf_cfg_req_handler
</UL>

<P><STRONG><a name="[24b]"></a>prf_extract_svc_info</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid16_comp
</UL>

<P><STRONG><a name="[24d]"></a>prf_client_att_info_rsp</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, prf_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>

<P><STRONG><a name="[2a]"></a>prf_init</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>prf_add_profile</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[25c]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_enable_req_handler
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_task_init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_task_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_task_init
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_upd_req_handler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_upd_req_handler
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_task_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_handle
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
</UL>

<P><STRONG><a name="[244]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_rsp_send
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_indicate_fee5_val
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_notify_fee4_val
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send_uuid128
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_disc_svc_send
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_unregister_atthdl2gatt
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
</UL>

<P><STRONG><a name="[24e]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_rsp_send
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_client_att_info_rsp
</UL>

<P><STRONG><a name="[28]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc2_send_ntf
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee5_send_ind
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_send_lvl
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_userDesc_by_handle_req
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_ntf_ind_cfg_by_handle_req
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_handle_req
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_read_service_data_by_uuid_req
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_ntf_cfg_req
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_service_ntf_cfg_req
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc2_ntf_req
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_ntf_req
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_oads_enable_prf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[256]"></a>prf_env_get_from_uuid</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_read_info_req_handler
</UL>

<P><STRONG><a name="[277]"></a>prf_env_get_from_handle</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_ntf_cfg_req_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_value_info_req_handler
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_read_info_req_handler
</UL>

<P><STRONG><a name="[257]"></a>diss_compute_cfg_flag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[253]"></a>diss_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[261]"></a>diss_handle_to_value</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[25d]"></a>diss_value_to_handle</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_cfm_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[25e]"></a>diss_check_val_len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_set_value_req_handler
</UL>

<P><STRONG><a name="[259]"></a>diss_task_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_init
</UL>

<P><STRONG><a name="[264]"></a>fee0s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_indicate_fee5_val
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_notify_fee4_val
</UL>

<P><STRONG><a name="[265]"></a>fee0s_notify_fee4_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_handle
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee4_val_upd_req_handler
</UL>

<P><STRONG><a name="[266]"></a>fee0s_indicate_fee5_val</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_handle
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_fee5_val_upd_req_handler
</UL>

<P><STRONG><a name="[252]"></a>fee0s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[267]"></a>fee0s_get_att_idx</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[263]"></a>fee0s_task_init</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_init
</UL>

<P><STRONG><a name="[269]"></a>bass_get_att_handle</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
</UL>

<P><STRONG><a name="[250]"></a>bass_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[26b]"></a>bass_get_att_idx</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[26c]"></a>bass_exe_operation</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_notify_batt_lvl
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_batt_level_upd_req_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_enable_req_handler
</UL>

<P><STRONG><a name="[268]"></a>bass_task_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[1dd]"></a>sdp_service_init</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[273]"></a>sdp_service_free_env_find</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
</UL>

<P><STRONG><a name="[251]"></a>sdp_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[204]"></a>sdp_discover_all_service</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[270]"></a>sdp_discover_service</STRONG> (Thumb, 872 bytes, Stack size 0 bytes, sdp_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>

<P><STRONG><a name="[271]"></a>check_enough_mem_add_service</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_check_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_extract_svc_info
</UL>

<P><STRONG><a name="[212]"></a>sdp_extract_svc_info</STRONG> (Thumb, 706 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_enough_mem_add_service
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_service_free_env_find
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_sdp_fee0_srv
</UL>

<P><STRONG><a name="[213]"></a>sdp_add_profiles</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_sdp_fee0_srv
</UL>

<P><STRONG><a name="[274]"></a>sdp_enable_rsp_send</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, sdp_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>

<P><STRONG><a name="[20f]"></a>sdp_enable_all_server_ntf_ind</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_write_service_ntf_cfg_req
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
</UL>

<P><STRONG><a name="[276]"></a>sdp_prf_register_all_atthdl2gatt</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, sdp_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
</UL>

<P><STRONG><a name="[26f]"></a>sdp_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_init
</UL>

<P><STRONG><a name="[27a]"></a>oad_save_reciveData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[27b]"></a>oad_updating_user_section_begin</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[22c]"></a>oad_updating_user_section_pro</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[280]"></a>oad_updating_user_section_end</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
</UL>

<P><STRONG><a name="[216]"></a>oadImgIdentifyWrite</STRONG> (Thumb, 834 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyReq
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ffc1_writer_req_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[27f]"></a>oadImgBlockWrite</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_end
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_updating_user_section_begin
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oad_save_reciveData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockReq
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[254]"></a>oads_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[279]"></a>oads_task_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_init
</UL>

<P><STRONG><a name="[282]"></a>MUSB_NewController</STRONG> (Thumb, 330 bytes, Stack size 0 bytes, mu_cntlr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInit
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
</UL>

<P><STRONG><a name="[2e9]"></a>MUSB_StartController</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mu_cntlr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
</UL>

<P><STRONG><a name="[287]"></a>MUSB_GetPort</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mu_cntlr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_sw_init
</UL>

<P><STRONG><a name="[289]"></a>MUSB_SuspendBus</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, mu_cntlr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>

<P><STRONG><a name="[28b]"></a>MUSB_ResumeBus</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, mu_cntlr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFinishResume
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_MsdNewOtgState
</UL>

<P><STRONG><a name="[28d]"></a>MGC_AllocateDynamicFifo</STRONG> (Thumb, 1288 bytes, Stack size 0 bytes, mu_cntlr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>

<P><STRONG><a name="[28f]"></a>MUSB_FindDescriptor</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, mu_descs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CountAlternates
</UL>

<P><STRONG><a name="[28e]"></a>MUSB_CountAlternates</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, mu_descs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_FindDescriptor
</UL>

<P><STRONG><a name="[2b9]"></a>MUSB_FindInterfaceDescriptor</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, mu_descs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSetInterface
</UL>

<P><STRONG><a name="[291]"></a>MUSB_FindDescriptorInBlock</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, mu_descs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_FindEndpointDescriptor
</UL>

<P><STRONG><a name="[290]"></a>MUSB_FindEndpointDescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mu_descs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_FindDescriptorInBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSetInterface
</UL>

<P><STRONG><a name="[292]"></a>MGC_DrcInit</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayInit
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayAppend
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcInit
</UL>

<P><STRONG><a name="[29e]"></a>MGC_CompleteOtgTransition</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcResetPort
</UL>

<P><STRONG><a name="[297]"></a>MGC_DrcChangeOtgState</STRONG> (Thumb, 330 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionChangeState
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteOtgTransition
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_SuspendBus
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Disconn_Fun
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Start_Fun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RelinquishHost
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcOtgTimer
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AidlBdisTimeout
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_OtgStateGetId
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_BSrpFailed
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_WaitSessReqTimeout
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_BAase0BrstTimeout
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBsr
</UL>

<P><STRONG><a name="[2a0]"></a>MGC_DrcUsbIsr</STRONG> (Thumb, 436 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayLength
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_RunScheduledTransfers
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSpeedSet
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionChangeState
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_OtgStateGetId
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcIsr
</UL>

<P><STRONG><a name="[2a3]"></a>MGC_DrcIsr</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcIsr
</UL>

<P><STRONG><a name="[2a4]"></a>MGC_DrcBindEndpoint</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayLength
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcBindEndpoint
</UL>

<P><STRONG><a name="[2a5]"></a>MGC_DrcServiceHostDefault</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceDefaultEnd
</UL>

<P><STRONG><a name="[2a6]"></a>MGC_DrcServiceDefaultEnd</STRONG> (Thumb, 512 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextControlTransfer
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteIrp
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceHostDefault
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceDefaultEnd
</UL>

<P><STRONG><a name="[3c]"></a>MGC_DrcResetPort</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteOtgTransition
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Disconn_Fun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[2aa]"></a>MGC_DrcOtgTimer</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, mu_drc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>

<P><STRONG><a name="[35]"></a>MGC_DrcBsr</STRONG> (Thumb, 628 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_OtgStateGetId
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[2ac]"></a>MUSB_RelinquishHost</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcAcceptDevice
</UL>

<P><STRONG><a name="[48]"></a>MGC_DrcAcceptDevice</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RelinquishHost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[28c]"></a>MGC_DrcFinishResume</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ResumeBus
</UL>

<P><STRONG><a name="[39]"></a>MGC_DrcSetHostPower</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostSetMaxPower
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[2ae]"></a>MUSB_RegisterOtgClient</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionRegisterClient
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_OtgStateGetId
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_sw_init
</UL>

<P><STRONG><a name="[2b0]"></a>MUSB_RequestBus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_OtgStateGetId
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_MsdNewOtgState
</UL>

<P><STRONG><a name="[2b1]"></a>MUSB_Start_Fun</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, mu_drc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Host_init
</UL>

<P><STRONG><a name="[2b2]"></a>MUSB_Disconn_Fun</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, mu_drc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_DeviceDisconnected
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Host_uninit
</UL>

<P><STRONG><a name="[285]"></a>MGC_FdrcInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcInit
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NewController
</UL>

<P><STRONG><a name="[4a]"></a>MGC_FdrcDynamicFifoLocation</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>MGC_FdrcIsr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcIsr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>MGC_FdrcStart</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>MGC_FdrcStop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>MGC_FdrcDestroy</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionDestroy
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>MGC_FdrcReadBusState</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>MGC_FdrcProgramBusState</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceDefaultEnd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>MGC_FdrcBindEndpoint</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBindEndpoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>MGC_FdrcStartRx</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_PipePacketReceived
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteIrp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>MGC_FdrcStartTx</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>MGC_FdrcFlushEndpoint</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>MGC_FdrcHaltEndpoint</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>MGC_FdrcLoadFifo</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcDefaultEndResponse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>MGC_FdrcDefaultEndResponse</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcLoadFifo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>MGC_FdrcServiceDefaultEnd</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextControlTransfer
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteIrp
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceDefaultEnd
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcProgramBusState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>MGC_FdrcServiceTransmitAvail</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_PipeTransmitReady
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteIrp
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>MGC_FdrcServiceReceiveReady</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_PipePacketReceived
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteIrp
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>MGC_FdrcUnloadFifo</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>MGC_FdrcDmaChannelStatusChanged</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mu_fdr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_cntlr.o(.text)
</UL>
<P><STRONG><a name="[2ba]"></a>MGC_FunctionPreparePipe</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSetInterface
</UL>

<P><STRONG><a name="[2af]"></a>MGC_FunctionRegisterClient</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionVerifyResources
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RegisterOtgClient
</UL>

<P><STRONG><a name="[2b5]"></a>MGC_FunctionDestroy</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcDestroy
</UL>

<P><STRONG><a name="[29b]"></a>MGC_FunctionChangeState</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionConfigSelected
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>

<P><STRONG><a name="[2a1]"></a>MGC_FunctionSpeedSet</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionVerifyResources
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
</UL>

<P><STRONG><a name="[2a9]"></a>MGC_FunctionParseSetup</STRONG> (Thumb, 1780 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionConfigSelected
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSetInterface
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionChangeState
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceDefaultEnd
</UL>

<P><STRONG><a name="[2d4]"></a>MUSB_DeviceResponse</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_McpDeviceRequest
</UL>

<P><STRONG><a name="[293]"></a>MUSB_ArrayInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcInit
</UL>

<P><STRONG><a name="[299]"></a>MUSB_ArrayLength</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBindEndpoint
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
</UL>

<P><STRONG><a name="[286]"></a>MUSB_ArrayFetch</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelControlTransfer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSetInterface
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextControlTransfer
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceDefaultEnd
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceHostDefault
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBindEndpoint
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceTransmitAvail
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceReceiveReady
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceDefaultEnd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBsr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AllocateDynamicFifo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NewController
</UL>

<P><STRONG><a name="[294]"></a>MUSB_ArrayAppend</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcInit
</UL>

<P><STRONG><a name="[2be]"></a>MUSB_ArrayClear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mu_list.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>

<P><STRONG><a name="[284]"></a>MUSB_ListInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EnumerateDevice
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NewController
</UL>

<P><STRONG><a name="[28a]"></a>MUSB_ListLength</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelControlTransfer
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FreeScheduleContents
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcCompleteResume
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_SuspendBus
</UL>

<P><STRONG><a name="[2bf]"></a>MUSB_ListFindRecord</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInsertItem
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>

<P><STRONG><a name="[288]"></a>MUSB_ListFindItem</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartTransfer
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelControlTransfer
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FreeScheduleContents
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextControlTransfer
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcCompleteResume
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_SuspendBus
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_GetPort
</UL>

<P><STRONG><a name="[283]"></a>MUSB_ListAppendItem</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ListInsertItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartTransfer
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_OpenPipe
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CommitBandwidth
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NewController
</UL>

<P><STRONG><a name="[2c1]"></a>MUSB_ListInsertItem</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, mu_list.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindRecord
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ListInsertItem
</UL>

<P><STRONG><a name="[29a]"></a>MUSB_ListRemoveItem</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelTransfer
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelControlTransfer
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ClosePipe
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FreeScheduleContents
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextControlTransfer
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcFlushAll
</UL>

<P><STRONG><a name="[29d]"></a>MUSB_StartControlTransfer</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostGetConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostGetFullDescriptor
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostGetShortDescriptor
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostSetDeviceAddress
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcAcceptDevice
</UL>

<P><STRONG><a name="[2c3]"></a>MGC_HostFindDriver</STRONG> (Thumb, 438 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_SkipEntry
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
</UL>

<P><STRONG><a name="[2c4]"></a>MGC_ReleaseAddress</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
</UL>

<P><STRONG><a name="[295]"></a>MGC_AllocateAddress</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostResetComplete
</UL>

<P><STRONG><a name="[296]"></a>MGC_EnumerateDevice</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostResetComplete
</UL>

<P><STRONG><a name="[2c6]"></a>MUSB_RejectDevice</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ReleaseAddress
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FreeScheduleContents
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_DeviceDisconnected
</UL>

<P><STRONG><a name="[2b4]"></a>MUSB_DeviceDisconnected</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostDestroy
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Disconn_Fun
</UL>

<P><STRONG><a name="[2b3]"></a>MGC_HostDestroy</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ReleaseAddress
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_DeviceDisconnected
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Disconn_Fun
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcDestroy
</UL>

<P><STRONG><a name="[2c8]"></a>MUSB_RejectInterfaces</STRONG> (Thumb, 396 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostFindDriver
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInit
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
</UL>

<P><STRONG><a name="[2a8]"></a>MGC_StartNextControlTransfer</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelControlTransfer
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceDefaultEnd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceDefaultEnd
</UL>

<P><STRONG><a name="[2a2]"></a>MGC_RunScheduledTransfers</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
</UL>

<P><STRONG><a name="[2cd]"></a>MUSB_OpenPipe</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CommitBandwidth
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
</UL>

<P><STRONG><a name="[2ce]"></a>MUSB_ClosePipe</STRONG> (Thumb, 310 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
</UL>

<P><STRONG><a name="[2cf]"></a>MUSB_CancelControlTransfer</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextControlTransfer
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>

<P><STRONG><a name="[2ad]"></a>MGC_HostSetMaxPower</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcSetHostPower
</UL>

<P><STRONG><a name="[29c]"></a>MGC_FindDescriptor</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, mu_pip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectInterfaces
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostFindDriver
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionVerifyResources
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RegisterOtgClient
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcAcceptDevice
</UL>

<P><STRONG><a name="[2b6]"></a>MGC_PipePacketReceived</STRONG> (Thumb, 310 bytes, Stack size 0 bytes, mu_pip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcStartRx
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceReceiveReady
</UL>

<P><STRONG><a name="[2b7]"></a>MGC_PipeTransmitReady</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, mu_pip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceTransmitAvail
</UL>

<P><STRONG><a name="[2ab]"></a>MGC_StartNextIrp</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, mu_pip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_CancelTransfer
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartTransfer
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CompleteIrp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcHaltEndpoint
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBsr
</UL>

<P><STRONG><a name="[2a7]"></a>MGC_CompleteIrp</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, mu_pip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcServiceDefaultEnd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcStartRx
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceTransmitAvail
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceReceiveReady
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FdrcServiceDefaultEnd
</UL>

<P><STRONG><a name="[2d0]"></a>MUSB_StartTransfer</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, mu_pip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StartRx
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_KeyboardStartTx
</UL>

<P><STRONG><a name="[2d1]"></a>MUSB_CancelTransfer</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, mu_pip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_StartNextIrp
</UL>

<P><STRONG><a name="[2d2]"></a>USBD_KeyboardStartTx</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_usb_device
</UL>

<P><STRONG><a name="[2d3]"></a>test_usb_device</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_KeyboardStartTx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_keyboad_data
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_KeyboardTxDataComplete
</UL>

<P><STRONG><a name="[5c]"></a>USBD_KeyboardTxDataComplete</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_usb_device
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_msdfn.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>MGC_McpNewUsbState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_msdfn.o(.data)
</UL>
<P><STRONG><a name="[f3]"></a>MGC_McpDeviceRequest</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_DeviceResponse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_msdfn.o(.data)
</UL>
<P><STRONG><a name="[2d5]"></a>USBD_StartRx</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mu_msdfn.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartTransfer
</UL>

<P><STRONG><a name="[2d6]"></a>USBD_RxDataCallback</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, mu_msdfn.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[f4]"></a>MGC_McpDeviceConfigSelected</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_msdfn.o(.data)
</UL>
<P><STRONG><a name="[2f1]"></a>check_b_isTRxing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mu_msdfn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_keyboad_data
</UL>

<P><STRONG><a name="[2d7]"></a>MGC_AfsMemRealloc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, board.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>

<P><STRONG><a name="[f8]"></a>MUSB_BoardMessageString</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardMessageNumber
</UL>
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.data)
</UL>
<P><STRONG><a name="[f9]"></a>MUSB_BoardMessageNumber</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardMessageString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.data)
</UL>
<P><STRONG><a name="[fa]"></a>MUSB_BoardGetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.data)
</UL>
<P><STRONG><a name="[2e1]"></a>MGC_AfsUdsIsr</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InterruptHandler
</UL>

<P><STRONG><a name="[2d9]"></a>MUSB_BoardInitController</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
</UL>

<P><STRONG><a name="[2db]"></a>MUSB_BoardInitTimers</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
</UL>

<P><STRONG><a name="[2dc]"></a>MUSB_BoardDestroyController</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
</UL>

<P><STRONG><a name="[2e4]"></a>MUSB_BoardRunBackground</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, board.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NoneRunBackground
</UL>

<P><STRONG><a name="[2e2]"></a>MUSB_BoardArmTimer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneArmTimer
</UL>

<P><STRONG><a name="[2dd]"></a>MUSB_BoardCancelTimer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneCancelTimer
</UL>

<P><STRONG><a name="[67]"></a>MUSB_BoardPrintDiag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>MUSB_BoardSystemToBusAddress</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[2e7]"></a>MUSB_HfiDeviceRemoved</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tst_msd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Host_uninit
</UL>

<P><STRONG><a name="[2de]"></a>usb_sw_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tst_msd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_InitSystem
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RegisterOtgClient
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_GetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[2e0]"></a>DelayNops</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_init
</UL>

<P><STRONG><a name="[229]"></a>usb_init</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayNops
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_sw_init
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[110]"></a>USB_InterruptHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, driver_usb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AfsUdsIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[68]"></a>MGC_NoneControllerIsr</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>MGC_NoneArmTimer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardArmTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>MGC_NoneCancelTimer</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardCancelTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[2e3]"></a>MUSB_NoneRunBackground</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, plat_uds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardRunBackground
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Host_uninit
</UL>

<P><STRONG><a name="[2e5]"></a>MUSB_Host_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, plat_uds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Start_Fun
</UL>

<P><STRONG><a name="[2e6]"></a>MUSB_Host_uninit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, plat_uds.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NoneRunBackground
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_HfiDeviceRemoved
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_Disconn_Fun
</UL>

<P><STRONG><a name="[2df]"></a>MUSB_InitSystem</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_NoneInitController
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_sw_init
</UL>

<P><STRONG><a name="[18b]"></a>user_info_need_save</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pincode_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_cmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sn_cmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
</UL>

<P><STRONG><a name="[2ea]"></a>erase_user_info</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, user_func.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
</UL>

<P><STRONG><a name="[2eb]"></a>save_user_info_to_flash</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task
</UL>

<P><STRONG><a name="[241]"></a>app_wdt_feed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task
</UL>

<P><STRONG><a name="[2ef]"></a>copy_ble_parm</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_parm
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[1b1]"></a>baudrate_check</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_baudrate
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
</UL>

<P><STRONG><a name="[1b0]"></a>get_baudrate</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baudrate_check
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[19e]"></a>set_ble_buf_size</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bufs_cmd
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[223]"></a>user_init</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_data
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_buf_size
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_baudrate
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1DbgInit
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_ble_parm
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[2f0]"></a>app_send_keyboad_data</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_b_isTRxing
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_usb_device
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task
</UL>

<P><STRONG><a name="[2f2]"></a>app_send_ble_data</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee4_send_ntf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_task
</UL>

<P><STRONG><a name="[2f3]"></a>gpio_task</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_ble_data
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_task
</UL>

<P><STRONG><a name="[22b]"></a>user_task</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_task
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_keyboad_data
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info_to_flash
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wdt_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1a3]"></a>reverse</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
</UL>

<P><STRONG><a name="[2f6]"></a>mac_search</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, user_func.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>

<P><STRONG><a name="[1ab]"></a>channel_search</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
</UL>

<P><STRONG><a name="[2f7]"></a>free_channel_search</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, user_func.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>

<P><STRONG><a name="[196]"></a>hexstr2bin</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
</UL>

<P><STRONG><a name="[106]"></a>set_at_rsp_ch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee3_writer_req_handler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1ISR
</UL>

<P><STRONG><a name="[168]"></a>get_at_rsp_ch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
</UL>

<P><STRONG><a name="[177]"></a>set_at_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_mode
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
</UL>

<P><STRONG><a name="[178]"></a>get_at_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_mode
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
</UL>

<P><STRONG><a name="[185]"></a>set_data_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_mode
</UL>

<P><STRONG><a name="[186]"></a>get_data_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_mode
</UL>

<P><STRONG><a name="[189]"></a>set_fw_version</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
</UL>

<P><STRONG><a name="[187]"></a>get_fw_version</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
</UL>

<P><STRONG><a name="[18a]"></a>set_version_time</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
</UL>

<P><STRONG><a name="[188]"></a>get_version_time</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
</UL>

<P><STRONG><a name="[18d]"></a>set_sn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sn_cmd
</UL>

<P><STRONG><a name="[18c]"></a>get_sn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sn_cmd
</UL>

<P><STRONG><a name="[18f]"></a>set_uuid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_cmd
</UL>

<P><STRONG><a name="[18e]"></a>get_uuid</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_cmd
</UL>

<P><STRONG><a name="[191]"></a>set_product_name</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
</UL>

<P><STRONG><a name="[190]"></a>get_product_name</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
</UL>

<P><STRONG><a name="[195]"></a>set_wdt_state</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
</UL>

<P><STRONG><a name="[194]"></a>get_wdt_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
</UL>

<P><STRONG><a name="[197]"></a>set_wdt_time</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
</UL>

<P><STRONG><a name="[193]"></a>get_wdt_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
</UL>

<P><STRONG><a name="[199]"></a>set_dev_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_cmd
</UL>

<P><STRONG><a name="[198]"></a>get_dev_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_cmd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[19a]"></a>set_gpio_value</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_cmd
</UL>

<P><STRONG><a name="[19b]"></a>set_gpio_led</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
</UL>

<P><STRONG><a name="[19c]"></a>get_gpio_led</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_mode_process_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
</UL>

<P><STRONG><a name="[19d]"></a>get_ble_buf_size</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee2_writer_cmd_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bufs_cmd
</UL>

<P><STRONG><a name="[1a0]"></a>set_ble_name</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
</UL>

<P><STRONG><a name="[19f]"></a>get_ble_name</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
</UL>

<P><STRONG><a name="[1a1]"></a>get_ble_state</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_status_cmd
</UL>

<P><STRONG><a name="[1a4]"></a>set_ble_mac</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[1a2]"></a>get_ble_mac</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_cmd
</UL>

<P><STRONG><a name="[1a6]"></a>set_ble_power</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_power_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
</UL>

<P><STRONG><a name="[1a5]"></a>get_ble_power</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
</UL>

<P><STRONG><a name="[1a7]"></a>get_ble_rssi</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_rx_path_comp_get
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_rssi_get
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rssi_cmd
</UL>

<P><STRONG><a name="[1a9]"></a>set_ble_pincode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pincode_cmd
</UL>

<P><STRONG><a name="[1a8]"></a>get_ble_pincode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pincode_cmd
</UL>

<P><STRONG><a name="[1aa]"></a>user_remove_bond</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_remove_bond
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_bond_cmd
</UL>

<P><STRONG><a name="[1ad]"></a>set_ble_parm</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_ble_parm
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
</UL>

<P><STRONG><a name="[1ae]"></a>get_ble_parm</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
</UL>

<P><STRONG><a name="[1b2]"></a>set_baudrate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1DbgInit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
</UL>

<P><STRONG><a name="[192]"></a>soft_reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_cmd
</UL>

<P><STRONG><a name="[1af]"></a>app_connect_device_info_get</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connected_info_cmd
</UL>

<P><STRONG><a name="[169]"></a>app_send_at_cmd</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fee5_send_ind
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_write_service_data_req
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
</UL>

<P><STRONG><a name="[2ee]"></a>malloc</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, h1_alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_buf_size
</UL>

<P><STRONG><a name="[2ed]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, h1_free.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_buf_size
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[15f]"></a>vsprintf</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, vsprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dbg1Printf
</UL>

<P><STRONG><a name="[20b]"></a>__2sprintf</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, __2sprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardMessageNumber
</UL>

<P><STRONG><a name="[2f5]"></a>__2snprintf</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, __2snprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_task
</UL>

<P><STRONG><a name="[301]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[302]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[303]"></a>_printf_truncate_signed</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[304]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[300]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, _printf_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[122]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, _printf_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d (via Veneer)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i (via Veneer)
</UL>

<P><STRONG><a name="[307]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, _printf_wctomb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[309]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[126]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o (via Veneer)
</UL>

<P><STRONG><a name="[12e]"></a>_printf_ll_oct</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo (via Veneer)
</UL>

<P><STRONG><a name="[30a]"></a>_printf_longlong_hex</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[128]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x (via Veneer)
</UL>

<P><STRONG><a name="[130]"></a>_printf_ll_hex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx (via Veneer)
</UL>

<P><STRONG><a name="[11a]"></a>_printf_hex_ptr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p (via Veneer)
</UL>

<P><STRONG><a name="[30b]"></a>__printf</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent (via BLX)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[184]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, atoi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baud_cmd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_parm_cmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bufs_cmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_cmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_mode
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_mode
</UL>

<P><STRONG><a name="[16c]"></a>strchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
</UL>

<P><STRONG><a name="[176]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, strstr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
</UL>

<P><STRONG><a name="[2da]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardInitController
</UL>

<P><STRONG><a name="[166]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_product_name
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_name
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconn_cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pincode_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_cmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_cmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_name_cmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_cmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sn_cmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;version_cmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_mode
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_mode
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_putstr
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_complete
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardMessageString
</UL>

<P><STRONG><a name="[16f]"></a>strncmp</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, strncmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lookup_command
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_complete
</UL>

<P><STRONG><a name="[2d8]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardMessageNumber
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardMessageString
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_memmove4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_unregister_command (via BLX)
</UL>

<P><STRONG><a name="[310]"></a>__rt_memmove_w</STRONG> (ARM, 128 bytes, Stack size 0 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>

<P><STRONG><a name="[174]"></a>strncpy</STRONG> (ARM, 104 bytes, Stack size 0 bytes, strncpy.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main (via BLX)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input (via BLX)
</UL>

<P><STRONG><a name="[182]"></a>strcmp</STRONG> (ARM, 240 bytes, Stack size 0 bytes, strcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_en (via BLX)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lookup_command (via BLX)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[2fd]"></a>__rt_heap_descriptor</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via BLX)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (via BLX)
</UL>

<P><STRONG><a name="[30e]"></a>__aeabi_errno_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via BLX)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul (via BLX)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via BLX)
</UL>

<P><STRONG><a name="[7]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[2fe]"></a>__Heap_Full</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, init_alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[313]"></a>__Heap_Broken</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[13a]"></a>_init_alloc</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, init_alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_escrow
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[316]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[2]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[306]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, _printf_intcommon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[118]"></a>_printf_charcount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n (via Veneer)
</UL>

<P><STRONG><a name="[2ff]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[69]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> vsprintf.o(.text)
<LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __2snprintf.o(.text)
</UL>
<P><STRONG><a name="[317]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[132]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c (via Veneer)
</UL>

<P><STRONG><a name="[134]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s (via Veneer)
</UL>

<P><STRONG><a name="[319]"></a>_printf_lcs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[136]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc (via Veneer)
</UL>

<P><STRONG><a name="[138]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls (via Veneer)
</UL>

<P><STRONG><a name="[12a]"></a>_printf_longlong_dec</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld (via Veneer)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli (via Veneer)
</UL>

<P><STRONG><a name="[30f]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, strtol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[308]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, _wcrtomb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[305]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via BLX)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[32a]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[31c]"></a>__rt_ctype_table</STRONG> (ARM, 20 bytes, Stack size 0 bytes, rt_ctype_table.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb (via BLX)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via BLX)
</UL>

<P><STRONG><a name="[312]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[31b]"></a>_ll_udiv10</STRONG> (ARM, 152 bytes, Stack size 0 bytes, lludiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via BLX)
</UL>

<P><STRONG><a name="[323]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via BLX)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (via Veneer)
</UL>

<P><STRONG><a name="[326]"></a>_printf_fp_hex_real</STRONG> (Thumb, 714 bytes, Stack size 0 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via BLX)
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (via Veneer)
</UL>

<P><STRONG><a name="[31d]"></a>_strtoul</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, _strtoul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[314]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[315]"></a>__rt_heap_escrow</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, heapauxa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[311]"></a>__rt_heap_expand</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, heapauxa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[141]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[13c]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common (via BLX)
</UL>

<P><STRONG><a name="[325]"></a>_printf_fp_infnan</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[327]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[31f]"></a>_btod_etento</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, bigflt0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via BLX)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[145]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via BLX)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[329]"></a>__sig_exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[328]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[149]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via BLX)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[32d]"></a>__default_signal_display</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, defsig_general.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[32e]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys_wrch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[320]"></a>_btod_d2e</STRONG> (ARM, 56 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[330]"></a>_d2e_denorm_low</STRONG> (ARM, 84 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[32f]"></a>_d2e_norm_op1</STRONG> (ARM, 104 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[331]"></a>__btod_div_common</STRONG> (ARM, 712 bytes, Stack size 0 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[332]"></a>_e2e</STRONG> (ARM, 220 bytes, Stack size 0 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[321]"></a>_btod_ediv</STRONG> (ARM, 48 bytes, Stack size 0 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[322]"></a>_btod_emul</STRONG> (ARM, 48 bytes, Stack size 0 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[333]"></a>__btod_mult_common</STRONG> (ARM, 612 bytes, Stack size 0 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[324]"></a>__ARM_fpclassify</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[30c]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[6c]"></a>_get_lc_ctype</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[13f]"></a>_get_lc_numeric</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2 (via BLX)
</UL>

<P><STRONG><a name="[209]"></a>__aeabi_ui2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler (via BLX)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[20a]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler (via BLX)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler (via BLX)
</UL>

<P><STRONG><a name="[334]"></a>_dmul</STRONG> (ARM, 364 bytes, Stack size 0 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[336]"></a>__fpl_dnaninf</STRONG> (ARM, 184 bytes, Stack size 0 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[335]"></a>__fpl_dretinf</STRONG> (ARM, 16 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[6]"></a>__ieee_status</STRONG> (ARM, 8 bytes, Stack size 0 bytes, istatus.o(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[11c]"></a>_printf_fp_dec</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[120]"></a>_printf_fp_hex</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[10e]"></a>UART0ISR</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart_initial.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[104]"></a>UART1ISR</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, uart1_initial .o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_uart_ringbuf_data
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_at_rsp_ch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[108]"></a>gpio_isr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[103]"></a>intc_irq</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, intc.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_isr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_isr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm0_isr
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_isr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_InterruptHandler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1ISR
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0ISR
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[10b]"></a>pwm0_isr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, pwm.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[10d]"></a>pwm1_isr</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, pwm.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_irq
</UL>

<P><STRONG><a name="[111]"></a>timer0_init</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, timer.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_init_test
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[b]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[c]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[d]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[f]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[e]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[10]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[16]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>rf_txpwr_cs_get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>rf_force_agc_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[16a]"></a>handle_input</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_putstr
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lookup_command
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
</UL>

<P><STRONG><a name="[16e]"></a>tab_complete</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input
</UL>

<P><STRONG><a name="[172]"></a>get_input</STRONG> (Thumb, 642 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_ringbuf_clean
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_getchar
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tab_complete
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cli_main
</UL>

<P><STRONG><a name="[1a]"></a>cli_main</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_ringbuf_clean
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_at_mode
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_at_mode
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_send_at_cmd
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_input
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_krhino.o(.text)
</UL>
<P><STRONG><a name="[16d]"></a>lookup_command</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, cli_krhino.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via BLX)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_input
</UL>

<P><STRONG><a name="[6d]"></a>help_cmd</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>at_mode</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_at_mode
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_at_mode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>data_mode</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_data_mode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>version_cmd</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_version_time
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fw_version
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_version_time
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fw_version
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>sn_cmd</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sn
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sn
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>uuid_cmd</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_uuid
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_uuid
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>dev_name_cmd</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_product_name
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_product_name
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>reboot_cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_reset
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>wdt_cmd</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wdt_time
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wdt_state
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wdt_time
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wdt_state
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>sleep_cmd</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dev_mode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dev_mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>gpio_cmd</STRONG> (Thumb, 406 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gpio_value
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>led_cmd</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gpio_led
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_led
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>bufs_cmd</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_buf_size
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_buf_size
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>name_cmd</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_name
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_name
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>ble_status_cmd</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_state
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>mac_cmd</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_mac
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_mac
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>power_cmd</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_power
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_power
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>rssi_cmd</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_rssi
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>pincode_cmd</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_pincode
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_pincode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>remove_bond_cmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_remove_bond
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>disconn_cmd</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_search
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>ble_parm_cmd</STRONG> (Thumb, 480 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_parm
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_parm
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>connected_info_cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_device_info_get
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>baud_cmd</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_info_need_save
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_baudrate
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_baudrate
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baudrate_check
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>adv_en</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, cli_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csp_printf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aos_cli_get_tag
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cli_api.o(.constdata)
</UL>
<P><STRONG><a name="[1e6]"></a>appm_set_adv_data</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, app_adv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
</UL>

<P><STRONG><a name="[1ea]"></a>appm_start_scaning</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, app_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
</UL>

<P><STRONG><a name="[1ed]"></a>appm_create_scaning</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
</UL>

<P><STRONG><a name="[1f5]"></a>appm_create_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
</UL>

<P><STRONG><a name="[8d]"></a>bass_batt_level_ntf_cfg_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>batt_level_upd_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>bass_enable_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>app_batt_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_batt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_batt.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_dis.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dis.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_pincode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_discover_all_service
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>gapc_security_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_sec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_bond_cmd
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[20d]"></a>app_get_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[98]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 540 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_operation_key2str
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_get_bond_status
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_fsm_next
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_fsm_next
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_fsm_next
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_name
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_get_bond_status
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_batt_enable_prf
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via BLX)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via BLX)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via BLX)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_key2str
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_bond_cmd
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_state
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>appm_msg_handler</STRONG> (Thumb, 1048 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_handler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>gapm_ext_adv_report_ind_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>gattc_sdp_svc_ind_handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_sdp_fee0_srv
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>app_gattc_event_ind_handler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>app_gattc_event_req_ind_handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>app_gattc_mtu_changed_ind_handler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>gapm_scan_request_ind_handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_all_server_ntf_ind
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>app_send_security_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sec_send_security_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>app_user_change_mtu_size_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_gatt_mtu_change
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appc_le_data_length_update_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>app_led_mode_process_handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio_led
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>fee0s_fee4_val_ntf_cfg_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>fee0s_fee5_val_ind_cfg_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>fee4_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>fee5_val_upd_rsp_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>app_fee0_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>fee2_writer_cmd_handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_buf_size
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>fee3_writer_req_handler</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_fee0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_uart_ringbuf_data
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_at_rsp_ch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fee0.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>fcc0s_fcc2_val_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fcc0.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>fcc2_val_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fcc0.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>app_fcc0_msg_dflt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fcc0.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>fcc1_writer_cmd_handler</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, app_fcc0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fcc2_send_ntf
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_fcc0.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>oads_enable_rsp_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>app_oads_msg_dflt_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>app_ffc1_writer_req_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>app_ffc2_writer_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>oads_ffc1_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>oads_ffc2_upd_rsp_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_oads.o(.constdata)
</UL>
<P><STRONG><a name="[21d]"></a>nvds_walk_tag</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_browse_tag
</UL>

<P><STRONG><a name="[1d]"></a>nvds_read</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>nvds_write</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>nvds_erase</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nvds.o(.text)
</UL>
<P><STRONG><a name="[21b]"></a>nvds_browse_tag</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_lock
</UL>

<P><STRONG><a name="[21a]"></a>nvds_init_memory</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_purge
</UL>

<P><STRONG><a name="[21e]"></a>nvds_purge</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, nvds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init_memory
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_walk_tag
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[22f]"></a>WFI</STRONG> (ARM, 4 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
</UL>

<P><STRONG><a name="[225]"></a>rom_env_init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[33]"></a>rwip_crypt_evt_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_result_handler
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_driver.o(.text)
</UL>
<P><STRONG><a name="[236]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_driver_init
</UL>

<P><STRONG><a name="[237]"></a>rwip_timer_hs_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_timer_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[238]"></a>rwip_timer_hus_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[23d]"></a>rwip_timer_10ms_handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[23b]"></a>rwip_wakeup</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wdt_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[239]"></a>rwip_wakeup_end</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, rwip_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_wakeup_end
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr
</UL>

<P><STRONG><a name="[24f]"></a>prf_itf_get</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_prf_itf_get
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_prf_itf_get
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_prf_itf_get
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_prf_itf_get
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[bf]"></a>diss_init</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_task_init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_compute_cfg_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>diss_destroy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, diss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>diss_create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>diss_cleanup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diss.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diss.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>diss_set_value_req_handler</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_check_val_len
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_handle_to_value
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>diss_value_cfm_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, diss_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_to_handle
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>fee0s_init</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>fee0s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>fee0s_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>fee0s_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fee0s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> fee0s.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>fee0s_fee4_val_upd_req_handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_notify_fee4_val
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>fee0s_fee5_val_upd_req_handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_indicate_fee5_val
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 340 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee0s_get_att_idx
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, fee0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fee0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>bass_init</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>bass_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>bass_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>bass_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bass.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bass.o(.constdata)
</UL>
<P><STRONG><a name="[26a]"></a>bass_notify_batt_lvl</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bass.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_handle
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>

<P><STRONG><a name="[d4]"></a>bass_enable_req_handler</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>bass_batt_level_upd_req_handler</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_att_idx
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_pack_char_pres_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bass_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_exe_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_task.o(.constdata)
</UL>
<P><STRONG><a name="[da]"></a>sdp_init</STRONG> (Thumb, 406 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_task_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_register_atthdl2gatt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>sdp_destroy</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>sdp_create</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>sdp_cleanup</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service.o(.constdata)
</UL>
<P><STRONG><a name="[275]"></a>sdp_write_service_ntf_cfg_req</STRONG> (Thumb, 560 bytes, Stack size 0 bytes, sdp_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdp_enable_all_server_ntf_ind
</UL>

<P><STRONG><a name="[df]"></a>sdp_enable_req_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>sdp_read_info_req_handler</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get_from_handle
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get_from_uuid
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_read_char_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>sdp_write_value_info_req_handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get_from_handle
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>sdp_write_ntf_cfg_req_handler</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get_from_handle
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_gatt_write_ntf_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>gattc_read_ind_handler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>gattc_event_ind_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>gattc_event_req_ind_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>sdp_default_msg_handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sdp_service_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdp_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>oads_init</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db128
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oads_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>oads_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>oads_create</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>oads_cleanup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, oads.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads.o(.constdata)
</UL>
<P><STRONG><a name="[27d]"></a>oadImgIdentifyReq</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[27e]"></a>oadImgBlockReq</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, oads.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>

<P><STRONG><a name="[eb]"></a>oads_enable_req_handler</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>oads_ffc1_upd_req_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>oads_ffc2_upd_req_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgBlockWrite
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oadImgIdentifyWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oads_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> oads_task.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>MGC_HostResetComplete</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EnumerateDevice
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_AllocateAddress
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>MGC_HostResetStart</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>MGC_BAase0BrstTimeout</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>MGC_WaitSessReqTimeout</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>MGC_BSrpFailed</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[298]"></a>MGC_DrcFlushAll</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayLength
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcResetPort
</UL>

<P><STRONG><a name="[29f]"></a>MGC_OtgStateGetId</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RequestBus
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RegisterOtgClient
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcUsbIsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcBsr
</UL>

<P><STRONG><a name="[50]"></a>MGC_AidlBdisTimeout</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_DrcChangeOtgState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>MGC_SetHnpSupportIrpComplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.data)
</UL>
<P><STRONG><a name="[f2]"></a>MGC_SetHnpEnableIrpComplete</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>MGC_RemoveSuspend</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>MGC_DrcCompleteResume</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, mu_drc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_drc.o(.text)
</UL>
<P><STRONG><a name="[2b8]"></a>MGC_FunctionSetInterface</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionPreparePipe
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_FindEndpointDescriptor
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_FindInterfaceDescriptor
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
</UL>

<P><STRONG><a name="[2bb]"></a>MGC_FunctionBindConfig</STRONG> (Thumb, 400 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionPreparePipe
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayLength
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionConfigSelected
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionVerifyResources
</UL>

<P><STRONG><a name="[2bc]"></a>MGC_FunctionVerifyResources</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionSpeedSet
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionRegisterClient
</UL>

<P><STRONG><a name="[2bd]"></a>MGC_FunctionConfigSelected</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, mu_fun.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionBindConfig
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionChangeState
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FunctionParseSetup
</UL>

<P><STRONG><a name="[2c0]"></a>MGC_ListInsertItem</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mu_list.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInsertItem
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
</UL>

<P><STRONG><a name="[57]"></a>MGC_HostSetDeviceAddress</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>MGC_HostGetShortDescriptor</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>MGC_HostGetFullDescriptor</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>MGC_HostGetConfig</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>MGC_EhsetResume</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>MGC_EhsetGetDescriptorSetup</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_Ehset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>MGC_EhsetGetDescriptorIn</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[2c2]"></a>MGC_SkipEntry</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostFindDriver
</UL>

<P><STRONG><a name="[56]"></a>MGC_HostEnumerator</STRONG> (Thumb, 808 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ReleaseAddress
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostFindDriver
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_Ehset
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartControlTransfer
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ArrayFetch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[2c9]"></a>MGC_ComputeBandwidth</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CommitBandwidth
</UL>

<P><STRONG><a name="[2cb]"></a>MGC_CommitBandwidth</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_FindScheduleSlot
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_ComputeBandwidth
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_OpenPipe
</UL>

<P><STRONG><a name="[58]"></a>MGC_DriverTimerExpired</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mu_hst.o(.text)
</UL>
<P><STRONG><a name="[2c5]"></a>MGC_Ehset</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_EhsetGetDescriptorSetup
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_HostEnumerator
</UL>

<P><STRONG><a name="[2c7]"></a>MGC_FreeScheduleContents</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, mu_hst.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListRemoveItem
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListLength
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RejectDevice
</UL>

<P><STRONG><a name="[2cc]"></a>MGC_FindScheduleSlot</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, mu_hst.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf_null
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListFindItem
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ListAppendItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MGC_CommitBandwidth
</UL>

<P><STRONG><a name="[f6]"></a>MGC_MsdNewOtgState</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tst_msd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_RequestBus
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_ResumeBus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tst_msd.o(.data)
</UL>
<P><STRONG><a name="[f7]"></a>MGC_MsdOtgError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tst_msd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tst_msd.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>MGC_MsdRdTransferComplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tst_msd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tst_msd.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>MGC_MsdWrTransferComplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tst_msd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tst_msd.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>MGC_NoneQueueBackgroundItem</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>MGC_NoneDequeueBackgroundItem</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>MGC_NoneFlushBackgroundQueue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>MGC_NoneLock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[66]"></a>MGC_NoneUnlock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> plat_uds.o(.text)
</UL>
<P><STRONG><a name="[2e8]"></a>MGC_NoneInitController</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, plat_uds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardDestroyController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardInitTimers
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_BoardInitController
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_StartController
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_NewController
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUSB_InitSystem
</UL>

<P><STRONG><a name="[2f8]"></a>hex</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, user_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
</UL>

<P><STRONG><a name="[6b]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[31e]"></a>_fp_digits</STRONG> (Thumb, 406 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via BLX)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via BLX)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e (via BLX)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[32b]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[318]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[31a]"></a>_printf_wc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<HR></body></html>
